# Top-level cmakelists.txt
cmake_minimum_required(VERSION 3.16)

# General configuration
if(NOT CMAKE_BUILD_TYPE)
  set(CMAKE_BUILD_TYPE Debug)
endif()
add_definitions(-DUNICODE -D_UNICODE)
set_property(GLOBAL PROPERTY USE_FOLDERS ON)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/build/lib CACHE PATH "Where to place compiled static libraries.")
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/build/lib CACHE PATH "Where to place compiled shared libraries.")
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/build/bin CACHE PATH "Where to place compiled executables.")
set(BUILD_DIR "${CMAKE_BINARY_DIR}/build")

# Components names
set(CMAKE_PROJECT_NAME Simulator)
set(RENDERER_NAME Renderer)

# Simulator setup
project(${CMAKE_PROJECT_NAME})
add_executable(${CMAKE_PROJECT_NAME} main.cpp)

# Source setup
file(GLOB_RECURSE SIM_SOURCE 
    "src/*.h"
    "src/*.cpp"
)
target_sources(${CMAKE_PROJECT_NAME} PUBLIC ${SIM_SOURCE})
target_include_directories(${CMAKE_PROJECT_NAME} PUBLIC "${CMAKE_BINARY_DIR}/src")

set_target_properties(${CMAKE_PROJECT_NAME} PROPERTIES
    CXX_STANDARD 20
    CXX_STANDARD_REQUIRED YES
)

# Renderer
add_subdirectory(Renderer)
add_dependencies(${CMAKE_PROJECT_NAME} ${RENDERER_NAME})
target_link_libraries(${CMAKE_PROJECT_NAME} PRIVATE ${RENDERER_NAME})
target_compile_definitions(${CMAKE_PROJECT_NAME} PUBLIC TEXTURES_FOLDER_PATH=\"${CMAKE_BINARY_DIR}/Scenes/Textures\")

set_property(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT ${CMAKE_PROJECT_NAME})
